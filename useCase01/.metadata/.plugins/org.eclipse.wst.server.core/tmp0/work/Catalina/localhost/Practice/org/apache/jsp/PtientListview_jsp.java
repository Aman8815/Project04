/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/9.0.87
 * Generated at: 2025-08-04 11:21:06 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;
import java.util.Iterator;
import java.util.List;
import com.rays.Bean.patientBean;
import com.rays.model.RoleModel;
import com.rays.Bean.RoleBean;
import com.rays.Bean.AdminBean;

public final class PtientListview_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  static {
    _jspx_dependants = new java.util.HashMap<java.lang.String,java.lang.Long>(1);
    _jspx_dependants.put("/Header.jsp", Long.valueOf(1754306330126L));
  }

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.LinkedHashSet<>(3);
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = new java.util.LinkedHashSet<>(6);
    _jspx_imports_classes.add("java.util.List");
    _jspx_imports_classes.add("com.rays.Bean.RoleBean");
    _jspx_imports_classes.add("java.util.Iterator");
    _jspx_imports_classes.add("com.rays.model.RoleModel");
    _jspx_imports_classes.add("com.rays.Bean.AdminBean");
    _jspx_imports_classes.add("com.rays.Bean.patientBean");
  }

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
      throws java.io.IOException, javax.servlet.ServletException {

    if (!javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      final java.lang.String _jspx_method = request.getMethod();
      if ("OPTIONS".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        return;
      }
      if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSPs only permit GET, POST or HEAD. Jasper also permits OPTIONS");
        return;
      }
    }

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=ISO-8859-1");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("<!DOCTYPE html>\r\n");
      out.write("<html>\r\n");
      out.write("<head>\r\n");
      out.write("<meta charset=\"ISO-8859-1\">\r\n");
      out.write("<title>Patient_list_view</title>\r\n");
      out.write("</head>\r\n");
      out.write("<body>\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("<!DOCTYPE html>\r\n");
      out.write("<html>\r\n");
      out.write("<head>\r\n");
      out.write("<meta charset=\"ISO-8859-1\">\r\n");
      out.write("<title>Header_File</title>\r\n");
      out.write("<style>\r\n");
      out.write("    body {\r\n");
      out.write("        margin: 0;\r\n");
      out.write("        font-family: Arial, sans-serif;\r\n");
      out.write("    }\r\n");
      out.write("\r\n");
      out.write("    .header {\r\n");
      out.write("        position: relative; /* Fix for absolute logout link */\r\n");
      out.write("        background-color: #0f6cbf;\r\n");
      out.write("        color: white;\r\n");
      out.write("        padding: 20px;\r\n");
      out.write("        text-align: center;\r\n");
      out.write("        border-radius: 0 0 15px 15px;\r\n");
      out.write("    }\r\n");
      out.write("\r\n");
      out.write("    .header h2 {\r\n");
      out.write("        margin: 10px 0;\r\n");
      out.write("    }\r\n");
      out.write("\r\n");
      out.write("    .header a {\r\n");
      out.write("        color: white;\r\n");
      out.write("        text-decoration: none;\r\n");
      out.write("        margin: 0 10px;\r\n");
      out.write("        font-weight: bold;\r\n");
      out.write("        padding: 8px 12px;\r\n");
      out.write("        border-radius: 5px;\r\n");
      out.write("        background-color: #0f4d92;\r\n");
      out.write("    }\r\n");
      out.write("\r\n");
      out.write("    .header a:hover {\r\n");
      out.write("        background-color: #093f75;\r\n");
      out.write("    }\r\n");
      out.write("\r\n");
      out.write("    .logout-link {\r\n");
      out.write("        position: absolute;\r\n");
      out.write("        top: 10px;\r\n");
      out.write("        right: 20px;\r\n");
      out.write("        background-color: #d9534f;\r\n");
      out.write("        padding: 6px 12px;\r\n");
      out.write("        color: white;\r\n");
      out.write("        border-radius: 5px;\r\n");
      out.write("        text-decoration: none;\r\n");
      out.write("    }\r\n");
      out.write("\r\n");
      out.write("    .logout-link:hover {\r\n");
      out.write("        background-color: #c9302c;\r\n");
      out.write("    }\r\n");
      out.write("</style>\r\n");
      out.write("</head>\r\n");
      out.write("<body>\r\n");
      out.write("\r\n");

    AdminBean user = (AdminBean) session.getAttribute("user");
    RoleBean rbean = new RoleBean();
    RoleModel rmodel = new RoleModel();

    if (user != null && RoleBean.ADMIN == user.getRollid()) {
        rbean = rmodel.findById(user.getRollid());

      out.write("\r\n");
      out.write("    <div class=\"header\">\r\n");
      out.write("        <a class=\"logout-link\" href=\"AdminLoginctl\">Logout</a>\r\n");
      out.write("        <h2>Hi, ");
      out.print( user.getName() != null ? user.getName().trim() : "Admin" );
      out.write(" \r\n");
      out.write("        (");
      out.print( rbean.getName() != null ? rbean.getName().trim() : "Admin Role" );
      out.write(")</h2>\r\n");
      out.write("        <div>\r\n");
      out.write("            <a href=\"AddPatientctl\">Add Patient</a>\r\n");
      out.write("            <a href=\"patiendListctl\">Patient List</a>\r\n");
      out.write("            <a href=\"AddDoctorctl\">Add Doctor</a>\r\n");
      out.write("            <a href=\"DoctorListCtl\">Doctor List</a>\r\n");
      out.write("            <a href=\"AddAdminctl\">Add Admin</a>\r\n");
      out.write("        </div>\r\n");
      out.write("    </div>\r\n");
      out.write("\r\n");

    } else if (user != null && RoleBean.DOCTOR == user.getRollid()) {
        rbean = rmodel.findById(user.getRollid());

      out.write("\r\n");
      out.write("    <div class=\"header\">\r\n");
      out.write("        <a class=\"logout-link\" href=\"AdminLoginctl\">Logout</a>\r\n");
      out.write("        <h2>Hi, ");
      out.print( user.getName() != null ? user.getName().trim() : "Doctor" );
      out.write(" \r\n");
      out.write("        (");
      out.print( rbean.getName() != null ? rbean.getName().trim() : "Doctor Role" );
      out.write(")</h2>\r\n");
      out.write("        <div>\r\n");
      out.write("            <a href=\"patiendListctl\">Patient List</a>\r\n");
      out.write("        </div>\r\n");
      out.write("    </div>\r\n");
      out.write("\r\n");

    } else if (user != null && RoleBean.NURSE == user.getRollid()) {

      out.write("\r\n");
      out.write("    <div class=\"header\">\r\n");
      out.write("        <a class=\"logout-link\" href=\"AdminLoginctl\">Logout</a>\r\n");
      out.write("        <h2>Hi, Nurse</h2>\r\n");
      out.write("        <div>\r\n");
      out.write("            <a href=\"patiendListctl\">Patient List</a>\r\n");
      out.write("        </div>\r\n");
      out.write("    </div>\r\n");
      out.write("\r\n");

    } else {

      out.write("\r\n");
      out.write("    <div class=\"header\">\r\n");
      out.write("        <h2>Hi, Guest</h2>\r\n");
      out.write("        <a href=\"Admin_Login.jsp\">Login</a>\r\n");
      out.write("    </div>\r\n");

    }

      out.write("\r\n");
      out.write("\r\n");
      out.write("</body>\r\n");
      out.write("</html>\r\n");
      out.write("	");
      out.write("\r\n");
      out.write("<hr>\r\n");
      out.write("<form action=\"patiendListctl\" method = \"post\">\r\n");
      out.write("	<table border=\"1\" width=\"100%\" align=\"center\" cellpadding=6px\r\n");
      out.write("		cellspacing=\".2\">\r\n");
      out.write("	<div align=\"center\">	\r\n");
      out.write("	<h2 style =\"color:red\">Patient_List</h2>\r\n");
      out.write("	");

    String msg = (String) session.getAttribute("msg");
    if (msg != null) {

      out.write("\r\n");
      out.write("    <h2 style=\"color: green;\" >");
      out.print( msg );
      out.write("</h2>\r\n");

        session.removeAttribute("msg"); // ek baar show karne ke baad hata do
    }

      out.write("\r\n");
      out.write("</div>\r\n");
      out.write("<tr style = \"background-color:yellow\">\r\n");
      out.write("             <th>select</th>\r\n");
      out.write("			<th>Id</th>\r\n");
      out.write("			<th>Name</th>\r\n");
      out.write("			<th>mobile_number</th>\r\n");
      out.write("			<th>Email</th>\r\n");
      out.write("			<th>disease</th>\r\n");
      out.write("			<th>Address</th>\r\n");
      out.write("			<th>Gender</th>\r\n");
      out.write("			<th>Description</th>\r\n");
      out.write("			<th>Deposit</th>\r\n");
      out.write("			<th>Total</th>\r\n");
      out.write("			<th>Remaining</th>\r\n");
      out.write("			<th>Edit</th>\r\n");
      out.write("		</tr>\r\n");
      out.write("		\r\n");
      out.write("		 ");
   
		 
		    List list =  (List) request.getAttribute("list"); 
		     
		   Iterator<patientBean> it = list.iterator();
		   
		   while(it.hasNext()){
		    	patientBean bean = (patientBean) it.next();
		    	
		 
      out.write("\r\n");
      out.write("		 \r\n");
      out.write("		 <tr style = \"background-color:white\">\r\n");
      out.write("		 <td><input type = \"checkbox\" class=\"checkbox\" name=\"ids\" value=\"");
      out.print(bean.getId() );
      out.write("\"></td>\r\n");
      out.write("   <td>");
      out.print(bean.getId() );
      out.write("</td>\r\n");
      out.write("   <td>");
      out.print(bean.getName() );
      out.write("</td>\r\n");
      out.write("   <td>");
      out.print(bean.getMobile());
      out.write("</td>\r\n");
      out.write("   <td>");
      out.print(bean.getEmail() );
      out.write("</td>\r\n");
      out.write("   <td>");
      out.print(bean.getDisease() );
      out.write("</td>\r\n");
      out.write("   <td>");
      out.print(bean.getAddress() );
      out.write("</td>\r\n");
      out.write("   <td>");
      out.print(bean.getGender() );
      out.write("</td>\r\n");
      out.write("   <td>");
      out.print(bean.getDescription() );
      out.write("</td>\r\n");
      out.write("   <td>");
      out.print(bean.getDeposit() );
      out.write("</td>\r\n");
      out.write("   <td>");
      out.print(bean.getTotal() );
      out.write("</td>\r\n");
      out.write("   <td>");
      out.print(bean.getTotal()-bean.getDeposit() );
      out.write("</td>\r\n");
      out.write("  <td><a href=\"AddPatientctl?id=");
      out.print(bean.getId());
      out.write("\">Edit</a></td>\r\n");
      out.write("		");
} 
      out.write(" \r\n");
      out.write("		 \r\n");
      out.write("		\r\n");
      out.write("		</table>\r\n");
      out.write("	<table width=\"100%\">\r\n");
      out.write("				<tr>\r\n");
      out.write("					<th></th>\r\n");
      out.write("					<td><input type=\"submit\" name=\"operation\"\r\n");
      out.write("						value=\"delete\"></td>\r\n");
      out.write("				\r\n");
      out.write("					<td><input type=\"submit\" name=\"operation\"\r\n");
      out.write("						value=\"new\"></td>\r\n");
      out.write("                     <td><input type = \"submit\" name=\"operation\" value=\"Back\"></td>\r\n");
      out.write("				</tr>\r\n");
      out.write("			</table>		\r\n");
      out.write("		\r\n");
      out.write("		</form>\r\n");
      out.write("	\r\n");
      out.write("</body>\r\n");
      out.write("</html>");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
